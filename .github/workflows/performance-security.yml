name: Performance and Security Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    - cron: '0 2 * * 1' # Run weekly on Mondays at 2 AM

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: |
          cd backend
          npm ci
          
      - name: Run SAST with SonarQube
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: backend
          
      - name: Run dependency vulnerability scan
        run: |
          cd backend
          npm audit --audit-level=high
          
      - name: Run OWASP ZAP API scan
        uses: zaproxy/action-api-scan@v0.4.0
        with:
          target: 'https://api-dev.agendafacil.com/dev/swagger.json'
          fail_action: false
          
      - name: Upload security reports
        uses: actions/upload-artifact@v3
        with:
          name: security-reports
          path: |
            backend/reports/security
            
  performance-test:
    name: Performance Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install k6
        run: |
          curl -L https://github.com/grafana/k6/releases/download/v0.42.0/k6-v0.42.0-linux-amd64.tar.gz | tar xz
          sudo cp k6-v0.42.0-linux-amd64/k6 /usr/local/bin
          
      - name: Run load tests
        run: |
          cd devops/testing
          k6 run load-test.js
          
      - name: Run stress tests
        run: |
          cd devops/testing
          k6 run stress-test.js
          
      - name: Run spike tests
        run: |
          cd devops/testing
          k6 run spike-test.js
          
      - name: Upload performance reports
        uses: actions/upload-artifact@v3
        with:
          name: performance-reports
          path: |
            devops/testing/reports
            
  infrastructure-test:
    name: Infrastructure Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
          
      - name: Terraform Init
        run: |
          cd infrastructure
          terraform init
          
      - name: Terraform Validate
        run: |
          cd infrastructure
          terraform validate
          
      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.0
        with:
          working_directory: infrastructure
          
      - name: Run checkov
        uses: bridgecrewio/checkov-action@master
        with:
          directory: infrastructure
          framework: terraform
          
  notify:
    name: Notify Results
    needs: [security-scan, performance-test, infrastructure-test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: ci-cd-alerts
          SLACK_TITLE: Performance & Security Tests Results
          SLACK_COLOR: ${{ job.status }}
          SLACK_FOOTER: 'AgendaFÃ¡cil CI/CD Pipeline'