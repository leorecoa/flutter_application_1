name: PR Quality Checks

on:
  pull_request:
    branches: [ main, develop ]
    types: [opened, synchronize, reopened]

jobs:
  quality-gate:
    name: Quality Gate
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Check formatting
        run: |
          if ! flutter format --set-exit-if-changed .; then
            echo "‚ùå Code formatting issues found. Run 'flutter format .' to fix."
            exit 1
          fi
          echo "‚úÖ Code formatting is correct"
      
      - name: Analyze code
        run: |
          flutter analyze --fatal-infos --fatal-warnings
          echo "‚úÖ Static analysis passed"
      
      - name: Run tests with coverage
        run: |
          flutter test --coverage
          echo "‚úÖ Tests completed"
      
      - name: Check coverage threshold
        uses: VeryGoodOpenSource/very_good_coverage@v2
        with:
          path: ./coverage/lcov.info
          min_coverage: 70
          exclude: "**/*.g.dart **/*.freezed.dart **/generated/**"
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
      
      - name: SonarCloud PR Analysis
        if: ${{ secrets.SONAR_TOKEN != '' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=leorecoa_flutter_application_1
            -Dsonar.organization=leorecoa
            -Dsonar.sources=lib
            -Dsonar.tests=test
            -Dsonar.flutter.coverage.reportPath=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.g.dart,**/*.freezed.dart,**/generated/**/*,test/**
            -Dsonar.cpd.exclusions=**/*.g.dart,**/*.freezed.dart
            -Dsonar.qualitygate.wait=false
            -Dsonar.pullrequest.key=${{ github.event.number }}
            -Dsonar.pullrequest.branch=${{ github.head_ref }}
            -Dsonar.pullrequest.base=${{ github.base_ref }}
      
      - name: Comment PR
        uses: actions/github-script@v6
        if: always()
        with:
          script: |
            const { data: checks } = await github.rest.checks.listForRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: context.sha
            });
            
            const failedChecks = checks.check_runs.filter(check => 
              check.conclusion === 'failure' || check.conclusion === 'cancelled'
            );
            
            if (failedChecks.length === 0) {
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '‚úÖ **Quality Gate Passed!** All checks are green. Ready for review! üöÄ'
              });
            } else {
              const failedChecksList = failedChecks.map(check => `- ‚ùå ${check.name}`).join('\n');
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `‚ùå **Quality Gate Failed**\n\nThe following checks need attention:\n${failedChecksList}\n\nPlease fix the issues and push again.`
              });
            }