name: Multi-Region Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'infrastructure/**'
      - 'backend/**'
      - 'frontend/**'
      - '.github/workflows/multi-region-deploy.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - staging
          - prod
      primary_region:
        description: 'Primary AWS region'
        required: true
        default: 'us-east-1'
        type: string
      secondary_region:
        description: 'Secondary AWS region'
        required: true
        default: 'us-west-2'
        type: string

jobs:
  deploy-infrastructure:
    name: Deploy Multi-Region Infrastructure
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Configure AWS credentials - Primary Region
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.primary_region || 'us-east-1' }}
      
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.6
      
      - name: Deploy Multi-Region Infrastructure
        run: |
          cd infrastructure
          chmod +x deploy-multi-region.sh
          ./deploy-multi-region.sh \
            ${{ github.event.inputs.environment || 'dev' }} \
            ${{ github.event.inputs.primary_region || 'us-east-1' }} \
            ${{ github.event.inputs.secondary_region || 'us-west-2' }}
  
  deploy-backend-primary:
    name: Deploy Backend - Primary Region
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Configure AWS credentials - Primary Region
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.primary_region || 'us-east-1' }}
      
      - name: Install dependencies
        run: |
          cd backend
          npm ci
      
      - name: Deploy with SAM - Primary Region
        run: |
          cd backend
          sam build
          sam deploy --stack-name agenda-facil-${{ github.event.inputs.environment || 'dev' }} \
            --parameter-overrides Environment=${{ github.event.inputs.environment || 'dev' }} \
            --no-confirm-changeset --no-fail-on-empty-changeset
  
  deploy-backend-secondary:
    name: Deploy Backend - Secondary Region
    needs: deploy-infrastructure
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Configure AWS credentials - Secondary Region
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.secondary_region || 'us-west-2' }}
      
      - name: Install dependencies
        run: |
          cd backend
          npm ci
      
      - name: Deploy with SAM - Secondary Region
        run: |
          cd backend
          sam build
          sam deploy --stack-name agenda-facil-${{ github.event.inputs.environment || 'dev' }} \
            --parameter-overrides Environment=${{ github.event.inputs.environment || 'dev' }} \
            --no-confirm-changeset --no-fail-on-empty-changeset
  
  deploy-frontend:
    name: Deploy Frontend to CloudFront
    needs: [deploy-backend-primary, deploy-backend-secondary]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.10.0'
      
      - name: Install dependencies
        run: |
          cd frontend
          flutter pub get
      
      - name: Build web
        run: |
          cd frontend
          flutter build web --release
      
      - name: Configure AWS credentials - Primary Region
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.primary_region || 'us-east-1' }}
      
      - name: Deploy to S3 - Primary Region
        run: |
          aws s3 sync frontend/build/web/ s3://agenda-facil-frontend-${{ github.event.inputs.environment || 'dev' }}-${{ github.event.inputs.primary_region || 'us-east-1' }}/ --delete
      
      - name: Configure AWS credentials - Secondary Region
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ github.event.inputs.secondary_region || 'us-west-2' }}
      
      - name: Deploy to S3 - Secondary Region
        run: |
          aws s3 sync frontend/build/web/ s3://agenda-facil-frontend-${{ github.event.inputs.environment || 'dev' }}-${{ github.event.inputs.secondary_region || 'us-west-2' }}/ --delete
      
      - name: Invalidate CloudFront cache
        run: |
          DISTRIBUTION_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items[?contains(@, 'app.agendafacil.com')]].Id" --output text)
          if [ ! -z "$DISTRIBUTION_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $DISTRIBUTION_ID --paths "/*"
          fi
  
  run-tests:
    name: Run Multi-Region Tests
    needs: [deploy-frontend]
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Install dependencies
        run: |
          npm install -g newman
      
      - name: Run API tests - Primary Region
        run: |
          newman run devops/testing/multi-region-tests.json \
            --env-var "baseUrl=https://api.${{ github.event.inputs.primary_region || 'us-east-1' }}.agendafacil.com" \
            --reporters cli,junit \
            --reporter-junit-export results/primary-region-tests.xml
      
      - name: Run API tests - Secondary Region
        run: |
          newman run devops/testing/multi-region-tests.json \
            --env-var "baseUrl=https://api.${{ github.event.inputs.secondary_region || 'us-west-2' }}.agendafacil.com" \
            --reporters cli,junit \
            --reporter-junit-export results/secondary-region-tests.xml
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: results/*.xml
  
  notify:
    name: Notify Deployment Status
    needs: [run-tests]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Send notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: deployments
          SLACK_TITLE: Multi-Region Deployment Status
          SLACK_MESSAGE: "Environment: ${{ github.event.inputs.environment || 'dev' }}\nPrimary Region: ${{ github.event.inputs.primary_region || 'us-east-1' }}\nSecondary Region: ${{ github.event.inputs.secondary_region || 'us-west-2' }}"
          SLACK_COLOR: ${{ job.status }}
          SLACK_FOOTER: 'AgendaFÃ¡cil Multi-Region Deployment'