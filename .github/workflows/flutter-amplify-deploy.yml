name: Flutter Build & Deploy

on:
  push:
    branches: [main]
    paths:
      - 'lib/**'
      - 'test/**'
      - 'pubspec.yaml'
      - '.github/workflows/flutter-amplify-deploy.yml'
  pull_request:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options: [dev, staging, prod]

jobs:
  test-and-analyze:
    name: Test and Analyze
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Verify formatting
        run: dart format --set-exit-if-changed .
      
      - name: Analyze project source
        run: flutter analyze --fatal-infos
      
      - name: Run tests with coverage
        run: flutter test --coverage
      
      - name: Upload coverage to Codecov
        if: env.CODECOV_TOKEN != ''
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/lcov.info
      
      - name: SonarCloud Scan
        if: env.SONAR_TOKEN != ''
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=leorecoa_flutter_application_1
            -Dsonar.organization=leorecoa
            -Dsonar.sources=lib
            -Dsonar.tests=test
            -Dsonar.flutter.coverage.reportPath=coverage/lcov.info
            -Dsonar.coverage.exclusions=**/*.g.dart,**/*.freezed.dart,**/generated/**/*,test/**
            -Dsonar.cpd.exclusions=**/*.g.dart,**/*.freezed.dart
            -Dsonar.qualitygate.wait=false
  
  build-and-deploy:
    name: Build and Deploy
    needs: test-and-analyze
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    environment: ${{ github.event.inputs.environment || 'dev' }}
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build web
        run: flutter build web --release
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION || 'us-east-1' }}
      
      - name: Deploy to Amplify
        if: secrets.AMPLIFY_APP_ID != ''
        run: |
          cd build/web
          zip -r ../../build.zip *
          cd ../..
          
          aws amplify start-deployment \
            --app-id ${{ secrets.AMPLIFY_APP_ID }} \
            --branch-name ${{ github.event.inputs.environment || 'dev' }} \
            --source-url build.zip
      
      - name: Deployment Summary
        run: |
          echo "âœ… Build completed successfully"
          echo "ðŸš€ Deployed to: ${{ github.event.inputs.environment || 'dev' }}"
          echo "ðŸ“¦ Commit: ${{ github.sha }}"