AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Backend SaaS AgendaFácil com cobrança via PIX para múltiplas empresas

Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Architectures:
      - x86_64
    Environment:
      Variables:
        CLIENTS_TABLE: !Ref ClientsTable
        PIX_KEY_PARAM: !Ref PixKeyParameter

Parameters:
  Environment:
    Type: String
    Default: prod
    AllowedValues: [dev, staging, prod]

Resources:
  # SSM Parameter para chave PIX (seguro)
  PixKeyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub "/agendafacil/${Environment}/pix-key"
      Type: SecureString
      Value: "05359566493"
      Description: "Chave PIX principal para recebimento"

  # DynamoDB Table
  ClientsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "agenda-clientes-${Environment}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: empresa_id
          AttributeType: S
        - AttributeName: tipo_dado
          AttributeType: S
        - AttributeName: vencimento
          AttributeType: S
      KeySchema:
        - AttributeName: empresa_id
          KeyType: HASH
        - AttributeName: tipo_dado
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: VencimentoIndex
          KeySchema:
            - AttributeName: tipo_dado
              KeyType: HASH
            - AttributeName: vencimento
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # API Gateway
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Environment
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key'"
        AllowOrigin: "'*'"

  # Lambda: Gerar QR Code PIX
  QRCodePixFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/payment/
      Handler: generatePix.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientsTable
        - SSMParameterReadPolicy:
            ParameterName: !Ref PixKeyParameter
      Events:
        GeneratePixApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /pix/generate
            Method: POST

  # Lambda: Atualizar Status Pagamento
  UpdatePaymentStatusFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/payment/
      Handler: updatePaymentStatus.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientsTable
      Events:
        UpdateStatusApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /payment/status
            Method: PUT

  # Lambda: Listar Clientes Ativos
  GetActiveClientsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/clientes/
      Handler: listActiveClients.handler
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref ClientsTable
      Events:
        ListClientsApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /clientes/ativos
            Method: GET

  # Lambda: Cobrança Recorrente (EventBridge)
  RecurringChargeFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/billing/
      Handler: recurringCharge.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientsTable
        - SSMParameterReadPolicy:
            ParameterName: !Ref PixKeyParameter
      Events:
        MonthlyBilling:
          Type: Schedule
          Properties:
            Schedule: cron(0 9 1 * ? *)  # Todo dia 1 às 9h
            Description: "Cobrança mensal automática"

  # Lambda: Webhook PIX (futuro)
  PixWebhookFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./lambda/webhook/
      Handler: pixWebhook.handler
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref ClientsTable
      Events:
        WebhookApi:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /webhook/pix
            Method: POST

Outputs:
  ApiGatewayUrl:
    Description: URL base da API
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"

  ClientsTableName:
    Description: Nome da tabela DynamoDB
    Value: !Ref ClientsTable
    Export:
      Name: !Sub "${AWS::StackName}-ClientsTable"

  PixGenerateEndpoint:
    Description: Endpoint para gerar QR Code PIX
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/pix/generate"

  ListClientsEndpoint:
    Description: Endpoint para listar clientes ativos
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/clientes/ativos"