AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AgendaFÃ¡cil SaaS - Minimal Working Version

Parameters:
  Environment:
    Type: String
    Default: dev

Resources:
  # DynamoDB Table
  MainTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-main"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  # S3 Bucket
  FilesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-files-${AWS::AccountId}"

  # Cognito User Pool
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub "${AWS::StackName}-users"
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireUppercase: true
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true

  # Lambda Function
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: lambda/auth/
      Handler: index.handler
      Runtime: nodejs18.x
      Environment:
        Variables:
          MAIN_TABLE: !Ref MainTable
          COGNITO_USER_POOL_ID: !Ref UserPool
      Events:
        AuthApi:
          Type: Api
          Properties:
            Path: /auth/{proxy+}
            Method: ANY

Outputs:
  ApiGatewayUrl:
    Description: API Gateway URL
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"

  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool

  MainTableName:
    Description: Main DynamoDB Table Name
    Value: !Ref MainTable

  FilesBucketName:
    Description: S3 Files Bucket Name
    Value: !Ref FilesBucket