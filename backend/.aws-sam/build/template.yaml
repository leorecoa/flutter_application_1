AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: AGENDEMAIS Backend - Sistema de Agendamento
Globals:
  Function:
    Timeout: 30
    Runtime: nodejs18.x
    Environment:
      Variables:
        USERS_TABLE:
          Ref: UsersTable
        APPOINTMENTS_TABLE:
          Ref: AppointmentsTable
        SERVICES_TABLE:
          Ref: ServicesTable
        PIX_TABLE:
          Ref: PixTable
        CORS_ORIGIN: '*'
Resources:
  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: agendemais-users
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: email
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: email-index
        KeySchema:
        - AttributeName: email
          KeyType: HASH
        Projection:
          ProjectionType: ALL
  AppointmentsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: agendemais-appointments
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      - AttributeName: userId
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
      GlobalSecondaryIndexes:
      - IndexName: userId-index
        KeySchema:
        - AttributeName: userId
          KeyType: HASH
        Projection:
          ProjectionType: ALL
  ServicesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: agendemais-services
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
  PixTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: agendemais-pix
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: id
        AttributeType: S
      KeySchema:
      - AttributeName: id
        KeyType: HASH
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: prod
      Cors:
        AllowMethods: '''*'''
        AllowHeaders: '''*'''
        AllowOrigin: '''*'''
  AuthFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AuthFunction
      Handler: index.handler
      Events:
        LoginApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/login
            Method: post
        RegisterApi:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /auth/register
            Method: post
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UsersTable
    Metadata:
      SamResourceId: AuthFunction
  AppointmentsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: AppointmentsFunction
      Handler: index.handler
      Events:
        GetAppointments:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /appointments
            Method: get
        CreateAppointment:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /appointments
            Method: post
        UpdateAppointment:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /appointments/{id}
            Method: put
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: AppointmentsTable
    Metadata:
      SamResourceId: AppointmentsFunction
  DashboardFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: DashboardFunction
      Handler: index.handler
      Events:
        GetStats:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /dashboard/stats
            Method: get
      Policies:
      - DynamoDBReadPolicy:
          TableName:
            Ref: AppointmentsTable
    Metadata:
      SamResourceId: DashboardFunction
  ServicesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ServicesFunction
      Handler: index.handler
      Events:
        GetServices:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /services
            Method: get
        CreateService:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /services
            Method: post
        UpdateService:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /services/{id}
            Method: put
        DeleteService:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /services/{id}/delete
            Method: post
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: ServicesTable
    Metadata:
      SamResourceId: ServicesFunction
  PixFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: PixFunction
      Handler: index.handler
      Events:
        GeneratePix:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /payments/pix/generate
            Method: post
        GetPixStatus:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /payments/pix/{id}/status
            Method: get
        GetPixHistory:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /payments/pix/history
            Method: get
        CancelPix:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /payments/pix/{id}/cancel
            Method: post
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: PixTable
    Metadata:
      SamResourceId: PixFunction
  ClientsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ClientsFunction
      Handler: index.handler
      Events:
        GetClients:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /clients
            Method: get
        CreateClient:
          Type: Api
          Properties:
            RestApiId:
              Ref: ApiGateway
            Path: /clients
            Method: post
    Metadata:
      SamResourceId: ClientsFunction
Outputs:
  ApiUrl:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/
