#!/bin/bash

# AGENDEMAIS - Deploy Script para Pagamentos PIX (Banco PAM) e Stripe
# Este script faz o deploy completo das fun√ß√µes de pagamento no AWS

set -e

echo "üöÄ AGENDEMAIS - Deploy PIX (Banco PAM) + Stripe"
echo "=============================================="

# Verificar se estamos no diret√≥rio correto
if [ ! -f "template.yaml" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio backend/"
    exit 1
fi

# Verificar se SAM CLI est√° instalado
if ! command -v sam &> /dev/null; then
    echo "‚ùå SAM CLI n√£o est√° instalado. Instale primeiro:"
    echo "   https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/install-sam-cli.html"
    exit 1
fi

# Verificar se AWS CLI est√° configurado
if ! aws sts get-caller-identity &> /dev/null; then
    echo "‚ùå AWS CLI n√£o est√° configurado. Execute 'aws configure' primeiro."
    exit 1
fi

echo "‚úÖ Pr√©-requisitos verificados"

# Instalar depend√™ncias das fun√ß√µes Lambda
echo "üì¶ Instalando depend√™ncias das fun√ß√µes Lambda..."

echo "   ‚Üí Payments PIX/Stripe function..."
cd src/functions/payments
npm install --production
cd ../../../

echo "   ‚Üí Webhooks Stripe function..."
cd src/functions/webhooks  
npm install --production
cd ../../../

echo "   ‚Üí Auth function..."
cd src/functions/auth
npm install --production --ignore-optional 2>/dev/null || echo "     (OK)"
cd ../../../

echo "   ‚Üí Appointments function..."
cd src/functions/appointments
npm install --production --ignore-optional 2>/dev/null || echo "     (OK)"
cd ../../../

echo "   ‚Üí Dashboard function..."
cd src/functions/dashboard
npm install --production --ignore-optional 2>/dev/null || echo "     (OK)"
cd ../../../

echo "‚úÖ Depend√™ncias instaladas"

# Verificar/Criar secret no Secrets Manager
echo "üîê Configurando AWS Secrets Manager..."
if aws secretsmanager describe-secret --secret-id agendemais/payments &> /dev/null; then
    echo "‚úÖ Secret 'agendemais/payments' encontrado"
else
    echo "‚ö†Ô∏è  Secret 'agendemais/payments' n√£o encontrado"
    echo "   Criando secret b√°sico..."
    
    aws secretsmanager create-secret \
        --name agendemais/payments \
        --description "AGENDEMAIS Payment Secrets - PIX Banco PAM + Stripe" \
        --secret-string '{
            "STRIPE_SECRET_KEY": "sk_test_CHANGE_ME_TO_REAL_KEY",
            "STRIPE_WEBHOOK_SECRET": "whsec_CHANGE_ME_TO_REAL_WEBHOOK_SECRET",
            "OPENPIX_API_KEY": "OPTIONAL_OPENPIX_KEY_OR_LEAVE_EMPTY"
        }' || echo "   (Secret pode j√° existir)"
    
    echo ""
    echo "‚ö†Ô∏è  IMPORTANTE: Configure as chaves reais no Secrets Manager:"
    echo "   1. Acesse: https://console.aws.amazon.com/secretsmanager/"
    echo "   2. Edite o secret 'agendemais/payments'"
    echo "   3. Configure:"
    echo "      ‚Ä¢ STRIPE_SECRET_KEY: sk_live_XXXXXXXXXX"
    echo "      ‚Ä¢ STRIPE_WEBHOOK_SECRET: whsec_XXXXXXXXXX"
    echo "      ‚Ä¢ OPENPIX_API_KEY: (opcional para PIX melhorado)"
    echo ""
fi

# Build SAM
echo "üî® Construindo aplica√ß√£o SAM..."
sam build --use-container

if [ $? -ne 0 ]; then
    echo "‚ùå Erro no build. Verifique os logs acima."
    exit 1
fi

echo "‚úÖ Build conclu√≠do"

# Deploy
echo "üöÄ Fazendo deploy das fun√ß√µes de pagamento..."

STACK_NAME="agendemais-backend"
if aws cloudformation describe-stacks --stack-name $STACK_NAME &> /dev/null; then
    echo "   Stack existe, fazendo update..."
    sam deploy --stack-name $STACK_NAME --capabilities CAPABILITY_IAM --no-confirm-changeset
else
    echo "   Primeira vez, fazendo deploy guiado..."
    sam deploy --guided --stack-name $STACK_NAME
fi

if [ $? -ne 0 ]; then
    echo "‚ùå Erro no deploy. Verifique os logs acima."
    exit 1
fi

# Obter URL da API
echo "üìã Obtendo informa√ß√µes do deploy..."
API_URL=$(aws cloudformation describe-stacks \
    --stack-name $STACK_NAME \
    --query 'Stacks[0].Outputs[?OutputKey==`ApiUrl`].OutputValue' \
    --output text)

if [ "$API_URL" != "None" ] && [ ! -z "$API_URL" ]; then
    echo ""
    echo "üéâ DEPLOY CONCLU√çDO COM SUCESSO!"
    echo "================================="
    echo ""
    echo "üì° API Gateway URL: $API_URL"
    echo ""
    echo "üîó Endpoints de Pagamento Criados:"
    echo "   üí∏ PIX (Banco PAM): POST $API_URL/api/pagamento/pix"
    echo "   üí≥ Stripe:          POST $API_URL/api/pagamento/stripe"
    echo "   üìû Webhook Stripe:  POST $API_URL/api/webhook/stripe"
    echo ""
    echo "üí∞ Dados PIX Configurados:"
    echo "   ‚Ä¢ Chave PIX: 05359566493 (CPF)"
    echo "   ‚Ä¢ Benefici√°rio: Leandro Jesse da Silva"
    echo "   ‚Ä¢ Banco: PAM"
    echo ""
    echo "‚öôÔ∏è  PR√ìXIMOS PASSOS OBRIGAT√ìRIOS:"
    echo ""
    echo "1. üîê CONFIGURAR CHAVES STRIPE:"
    echo "   ‚Ä¢ Acesse: https://dashboard.stripe.com/apikeys"
    echo "   ‚Ä¢ Copie a Secret Key (sk_live_...)"
    echo "   ‚Ä¢ Configure webhook endpoint: $API_URL/api/webhook/stripe"
    echo "   ‚Ä¢ Selecione evento: checkout.session.completed"
    echo "   ‚Ä¢ Copie o Webhook Secret (whsec_...)"
    echo ""
    echo "2. üîí ATUALIZAR SECRETS MANAGER:"
    echo "   aws secretsmanager update-secret --secret-id agendemais/payments --secret-string '{"
    echo "     \"STRIPE_SECRET_KEY\": \"sk_live_SUA_CHAVE_AQUI\","
    echo "     \"STRIPE_WEBHOOK_SECRET\": \"whsec_SEU_WEBHOOK_SECRET_AQUI\","
    echo "     \"OPENPIX_API_KEY\": \"OPCIONAL\""
    echo "   }'"
    echo ""
    echo "3. üåê CONFIGURAR FRONTEND (Amplify):"
    echo "   ‚Ä¢ Vari√°vel: AWS_API_ENDPOINT = $API_URL"
    echo ""
    echo "4. üß™ TESTAR ENDPOINTS:"
    echo "   # Teste PIX"
    echo "   curl -X POST $API_URL/api/pagamento/pix \\"
    echo "     -H 'Authorization: Bearer SEU_JWT_TOKEN' \\"
    echo "     -H 'Content-Type: application/json' \\"
    echo "     -d '{\"valor\": 90.00, \"descricao\": \"Teste PIX\"}'"
    echo ""
    echo "   # Teste Stripe"
    echo "   curl -X POST $API_URL/api/pagamento/stripe \\"
    echo "     -H 'Authorization: Bearer SEU_JWT_TOKEN' \\"
    echo "     -H 'Content-Type: application/json' \\"
    echo "     -d '{\"valor\": 90.00, \"descricao\": \"Teste Stripe\"}'"
else
    echo "‚ö†Ô∏è  Deploy conclu√≠do, mas n√£o foi poss√≠vel obter a URL da API"
    echo "   Verifique no console AWS CloudFormation"
fi

echo ""
echo "üìä Recursos AWS Criados:"
echo "   ‚Ä¢ üóÑÔ∏è  Tabela DynamoDB: agendemais-payments"
echo "   ‚Ä¢ ‚ö° Lambda Functions:"
echo "     - PaymentsPixFunction (PIX Banco PAM)"
echo "     - PaymentsStripeFunction (Stripe Checkout)"
echo "     - WebhooksStripeFunction (Confirma√ß√µes)"
echo "   ‚Ä¢ üåê API Gateway com endpoints seguros"
echo "   ‚Ä¢ üîê IAM Roles com permiss√µes m√≠nimas"
echo "   ‚Ä¢ üîí Secrets Manager para chaves"
echo ""
echo "üîç Monitoramento:"
echo "   ‚Ä¢ CloudWatch Logs:"
echo "     - /aws/lambda/agendemais-PaymentsPixFunction"
echo "     - /aws/lambda/agendemais-PaymentsStripeFunction"
echo "     - /aws/lambda/agendemais-WebhooksStripeFunction"
echo "   ‚Ä¢ DynamoDB: agendemais-payments table"
echo "   ‚Ä¢ Stripe Dashboard: https://dashboard.stripe.com/"
echo ""
echo "üí° Vari√°veis de Ambiente Configuradas:"
echo "   ‚Ä¢ PIX_CHAVE_CPF = 05359566493"
echo "   ‚Ä¢ PIX_BENEFICIARIO = Leandro Jesse da Silva"
echo "   ‚Ä¢ PIX_BANCO = Banco PAM"
echo "   ‚Ä¢ FRONTEND_URL = https://main.d31iho7gw23enq.amplifyapp.com"
echo "   ‚Ä¢ JWT_SECRET = agendemais-secret-key-2024"
echo ""
echo "‚úÖ AGENDEMAIS PAGAMENTOS REAIS PRONTOS!"
echo "   üè¶ PIX: CPF 05359566493 (Banco PAM)"
echo "   üí≥ Stripe: Checkout internacional"
echo "   üì± Pronto para receber R$ 90,00 por cliente"