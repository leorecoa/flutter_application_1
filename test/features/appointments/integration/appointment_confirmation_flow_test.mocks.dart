// Mocks generated by Mockito 5.4.6 from annotations
// in flutter_application_1/test/features/appointments/integration/appointment_confirmation_flow_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_application_1/core/models/appointment_model.dart'
    as _i3;
import 'package:flutter_application_1/core/models/paginated_response_model.dart'
    as _i2;
import 'package:flutter_application_1/core/services/appointments/i_appointments_service.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePaginatedResponse_0<T> extends _i1.SmartFake
    implements _i2.PaginatedResponse<T> {
  _FakePaginatedResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeAppointment_1 extends _i1.SmartFake implements _i3.Appointment {
  _FakeAppointment_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [IAppointmentsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAppointmentsService extends _i1.Mock
    implements _i4.IAppointmentsService {
  MockIAppointmentsService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<Map<String, dynamic>> createAppointment({
    required String? professionalId,
    required String? serviceId,
    required DateTime? appointmentDateTime,
    required String? clientName,
    required String? clientPhone,
    required String? service,
    required double? price,
    String? notes,
    String? clientId,
    int? duration,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createAppointment, [], {
              #professionalId: professionalId,
              #serviceId: serviceId,
              #appointmentDateTime: appointmentDateTime,
              #clientName: clientName,
              #clientPhone: clientPhone,
              #service: service,
              #price: price,
              #notes: notes,
              #clientId: clientId,
              #duration: duration,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> getAppointmentById(String? appointmentId) =>
      (super.noSuchMethod(
            Invocation.method(#getAppointmentById, [appointmentId]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> getAppointments({
    String? status,
    DateTime? date,
    String? clientId,
    int? limit,
    String? lastKey,
    String? search,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAppointments, [], {
              #status: status,
              #date: date,
              #clientId: clientId,
              #limit: limit,
              #lastKey: lastKey,
              #search: search,
            }),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<bool> checkTimeConflict(
    DateTime? appointmentDateTime,
    int? durationMinutes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#checkTimeConflict, [
              appointmentDateTime,
              durationMinutes,
            ]),
            returnValue: _i5.Future<bool>.value(false),
          )
          as _i5.Future<bool>);

  @override
  _i5.Future<Map<String, dynamic>> updateAppointmentStatus(
    String? appointmentId,
    String? newStatus,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateAppointmentStatus, [
              appointmentId,
              newStatus,
            ]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> updateAppointment(
    String? appointmentId,
    Map<String, dynamic>? appointmentData,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateAppointment, [
              appointmentId,
              appointmentData,
            ]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<Map<String, dynamic>> deleteAppointment(String? appointmentId) =>
      (super.noSuchMethod(
            Invocation.method(#deleteAppointment, [appointmentId]),
            returnValue: _i5.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i5.Future<Map<String, dynamic>>);

  @override
  _i5.Future<_i2.PaginatedResponse<_i3.Appointment>> getAppointmentsList({
    Map<String, dynamic>? filters,
    int? limit = 20,
    String? lastKey,
    String? searchTerm,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getAppointmentsList, [], {
              #filters: filters,
              #limit: limit,
              #lastKey: lastKey,
              #searchTerm: searchTerm,
            }),
            returnValue:
                _i5.Future<_i2.PaginatedResponse<_i3.Appointment>>.value(
                  _FakePaginatedResponse_0<_i3.Appointment>(
                    this,
                    Invocation.method(#getAppointmentsList, [], {
                      #filters: filters,
                      #limit: limit,
                      #lastKey: lastKey,
                      #searchTerm: searchTerm,
                    }),
                  ),
                ),
          )
          as _i5.Future<_i2.PaginatedResponse<_i3.Appointment>>);

  @override
  _i5.Future<List<_i3.Appointment>> getClientAppointments(String? clientId) =>
      (super.noSuchMethod(
            Invocation.method(#getClientAppointments, [clientId]),
            returnValue: _i5.Future<List<_i3.Appointment>>.value(
              <_i3.Appointment>[],
            ),
          )
          as _i5.Future<List<_i3.Appointment>>);

  @override
  _i5.Future<_i3.Appointment> createAppointmentModel({
    required String? professionalId,
    required String? serviceId,
    required DateTime? appointmentDateTime,
    required String? clientName,
    required String? clientPhone,
    required String? service,
    required double? price,
    String? notes,
    String? clientId,
    int? duration,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#createAppointmentModel, [], {
              #professionalId: professionalId,
              #serviceId: serviceId,
              #appointmentDateTime: appointmentDateTime,
              #clientName: clientName,
              #clientPhone: clientPhone,
              #service: service,
              #price: price,
              #notes: notes,
              #clientId: clientId,
              #duration: duration,
            }),
            returnValue: _i5.Future<_i3.Appointment>.value(
              _FakeAppointment_1(
                this,
                Invocation.method(#createAppointmentModel, [], {
                  #professionalId: professionalId,
                  #serviceId: serviceId,
                  #appointmentDateTime: appointmentDateTime,
                  #clientName: clientName,
                  #clientPhone: clientPhone,
                  #service: service,
                  #price: price,
                  #notes: notes,
                  #clientId: clientId,
                  #duration: duration,
                }),
              ),
            ),
          )
          as _i5.Future<_i3.Appointment>);
}
